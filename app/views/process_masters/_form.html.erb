<%= form_for(@process_master) do |f| %>
  <% if @process_master.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@process_master.errors.count, "error") %> prohibited this process_master from being saved:</h2>

      <ul>
      <% @process_master.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>


  <div class="row">
    <div class="col-md-12">
      <form id="form-holder" class="form-horizontal" role="form">
        <div class="row">
          <div class="col-md-6">
            <div class="row">
              <div class="form-group">
                <label class="col-md-3 control-label no-padding-right"> Process Name </label>
                <input type="text" class="col-md-9" placeholder="Process Name">
              </div>
            </div>
          </div>
        </div>

        <hr>

        <div class="row">
          <div class="col-md-12">
            <div class="widget-box">
              <div class="widget-header">
                <h4 class="widget-title">
                Master Steps 
                <a class="btn btn-xs btn-primary" onclick="addMasterStep()" style="margin-left: 15px">Add Step</a></h4>
              </div>

              <div class="widget-body">
                <div class="widget-main">

                  <div id="accordion" class="accordion-style1 panel-group">

                  </div>

                </div>
              </div>
            </div>
          </div>
        </div>














        <div class="space-32"></div>
        <div class="space-32"></div>
        <div class="space-32"></div>


        <div class="row">

          <div class="col-md-4">
            <div class="row">
              <div class="form-group">
                <label class="col-md-3 control-label no-padding-right"> Action </label>
                <div class="col-md-9">
                  <select class="form-control" onchange="buildActionForm($(this))">
                    <option value="">Select Action</option>
                    <option value="Fill">Fill</option>
                    <option value="Approve">Approve</option>
                    <option value="Notify">Notify</option>
                    <option value="MarkComplete">MarkComplete</option>
                    <option value="SpawnD">SpawnD</option>
                    <option value="SpawnI">SpawnI</option>
                    <!-- <option value="Update">Update</option> -->
                  </select>
                </div>
              </div>
            </div>
          </div>

          <div class="col-md-4">
            <div class="row">
              <div class="form-group">
                <label class="col-md-3 control-label no-padding-right"> Action Model </label>
                <div class="col-md-9">
                  <select class="form-control">
                  </select>
                </div>

              </div>
            </div>
          </div>
        </div>

        <div class="space-6"></div>

        <div class="row">
          <div class="col-md-1">...</div>
          <div class="col-md-10 form-container">

            <div class="row">
              <div class="col-md-4">
                <div class="form-group">
                  <div class="col-md-3 control-label no-padding-right"></div>
                </div>  
              </div>

            </div>


          </div>
        </div>
      </form>
    </div>
  </div>
  
  <br /><br />
  <div class="actions">
    <%= f.submit %>
  </div>
<% end %>

<script>

    
// apply_dataTable('#user_table_table', '#user_table_wrapper','#user_table_length', '#user_table_filter');

  function makeChosen() {
    $('.chosen-select').chosen(); 
    $('.chosen-container').css('width','95%');
  }
  makeChosen();

  function buildActionForm(_this) {

    var action = _this.val();
    var actionContainer = _this.closest('.action-holder').siblings('.action-form-container');
    actionContainer.empty();

    if(typeof gon.actionForms[action] == "object") 
      initHTMLAppender(actionContainer, gon.actionForms[action]);
  }

  function addMasterStep() {
    var stepno = $("#accordion .panel").length + 1;
    initHTMLAppender($("#accordion"), buildMasterStep(stepno))
    makeChosen();
    $("#accordion .panel .accordion-toggle").last().trigger('click');
  }

  function buildMasterStep(stepno) {
    var masterStep = [
      {type: "<div />", attributes: {class:"panel panel-default"}, child:[
        {type: "<div />", attributes: {class:"panel-heading"}, child:[
          {type: "<h4 />", attributes: {class:"panel-title"}, child:[
            {type: "<a />", attributes: {class:"accordion-toggle collapsed", onclick:"toggleMasterStep($(this))"}, child:[
              {type: "<i />", attributes: {class:"ace-icon fa fa-angle-down bigger-110"}},
              {type: "<span />", attributes: {}, child:[
                {type: "<span />", attributes: {class: "step-label", html: "Step #"+stepno}},
                {type: "<a />", attributes: {class: "btn btn-xs btn-danger", style: "margin-left: 15px", onclick: "deleteMasterStep($(this))", html: "Delete Step"}}
              ]}
            ]}
          ]}
        ]},
        {type: "<div />", attributes: {class:"panel-collapse collapse"},child:[
          {type: "<div />", attributes: {class:"panel-body"}, child:[
            {type: "<div />", attributes: {class: "row action-holder"}, child: [
              {type: "<div />", attributes: {class: "col-md-6"}, child: [
                {type: "<div />", attributes: {class:"row"}, child: [
                  {type: "<div />", attributes: {class:"form-group"}, child: [
                    {type: "<div />", attributes: {class:"col-md-3 control-label no-padding-right", html: " Action "}},
                    {type: "<div />", attributes: {class:"col-md-9"}, child: [
                      {type: "<select />", attributes: {class:"chosen-select", onchange: "buildActionForm($(this))"}, child: [
                        {type: "<option />", attributes: {value: "", html: "Select Action"}},
                        {type: "<option />", attributes: {value: "Fill", html: "Fill"}},
                        {type: "<option />", attributes: {value: "Approve", html: "Approve"}},
                        {type: "<option />", attributes: {value: "Notify", html: "Notify"}},
                        {type: "<option />", attributes: {value: "MarkComplete", html: "MarkComplete"}},
                        {type: "<option />", attributes: {value: "SpawnD", html: "SpawnD"}},
                        {type: "<option />", attributes: {value: "SpawnI", html: "SpawnI"}}
                      ]}
                    ]}
                  ]}
                ]}
              ]},
              {type: "<div />", attributes: {class: "col-md-6"}, child: [
                {type: "<div />", attributes: {class:"row"}, child: [
                  {type: "<div />", attributes: {class:"form-group"}, child: [
                    {type: "<div />", attributes: {class:"col-md-3 control-label no-padding-right", html: " Action Model "}},
                    {type: "<div />", attributes: {class:"col-md-9"}, child: [
                      {type: "<select />", attributes: {class:"chosen-select", onchange: "buildActionForm($(this))"}, child: [
                        {type: "<option />", attributes: {value: "", html: "Select Action"}},
                        {type: "<option />", attributes: {value: "Fill", html: "Fill"}},
                        {type: "<option />", attributes: {value: "Approve", html: "Approve"}},
                        {type: "<option />", attributes: {value: "Notify", html: "Notify"}},
                        {type: "<option />", attributes: {value: "MarkComplete", html: "MarkComplete"}},
                        {type: "<option />", attributes: {value: "SpawnD", html: "SpawnD"}},
                        {type: "<option />", attributes: {value: "SpawnI", html: "SpawnI"}}
                      ]}
                    ]}
                  ]}
                ]}
              ]}
            ]},
            {type: "<div />", attributes: {class: "space-10"}},
            {type: "<div />", attributes: {class: "action-form-container"}}
          ]}    
        ]}
      ]}
    ]

    return masterStep
  }

  function toggleMasterStep(_this) {
    _this.toggleClass('collapsed');
    _this.closest('.panel-heading').siblings('.panel-collapse').toggle('height');
    _this.closest('.panel-heading').siblings('.panel-collapse').toggleClass('in');
  }

  function deleteMasterStep(_this) {
    _this.closest('.panel').remove();
    renameMasterSteps();
  }

  function renameMasterSteps() {
    var stepLabels = $("#accordion .step-label");
    console.log(stepLabels)
    for(var i = 0, len = stepLabels.length; i < len; i++) {
      stepLabels[i].innerHTML = "Step #"+(i+1);
    }
  }

  // $('#user_table')
  //       //.wrap("<div class='dataTables_borderWrap' />")   //if you are applying horizontal scrolling (sScrollX)
  //       .dataTable( {
  //         bAutoWidth: false,
  //         "aoColumns": [
  //           { "bSortable": false },
  //           null, null,null, null, null,
  //           { "bSortable": false }
  //         ],
  //         "aaSorting": []
      
  //         //,
  //         //"sScrollY": "200px",
  //         //"bPaginate": false,
      
  //         //"sScrollX": "100%",
  //         //"sScrollXInner": "120%",
  //         //"bScrollCollapse": true,
  //         //Note: if you are applying horizontal scrolling (sScrollX) on a ".table-bordered"
  //         //you may want to wrap the table inside a "div.dataTables_borderWrap" element
      
  //         //"iDisplayLength": 50
  //         } );

</script>
